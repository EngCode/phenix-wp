{"version":3,"file":"blocks/px-section/index.js","mappings":"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","sources":["webpack://phenix-ui/./src/blocks/px-components/px-background.js","webpack://phenix-ui/./src/blocks/px-components/px-colors.js","webpack://phenix-ui/./src/blocks/px-section/edit.js","webpack://phenix-ui/external window [\"wp\",\"blockEditor\"]","webpack://phenix-ui/external window [\"wp\",\"blocks\"]","webpack://phenix-ui/external window [\"wp\",\"components\"]","webpack://phenix-ui/external window [\"wp\",\"element\"]","webpack://phenix-ui/webpack/bootstrap","webpack://phenix-ui/webpack/runtime/compat get default export","webpack://phenix-ui/webpack/runtime/define property getters","webpack://phenix-ui/webpack/runtime/hasOwnProperty shorthand","webpack://phenix-ui/./src/blocks/px-section/index.js"],"sourcesContent":["/*\r\n * ===> 01 - WordPress Modules\r\n * ===> 02 - Phenix Background\r\n * ===> 03 - Buttons Creator\r\n * ===> 04 - Component Output\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport {Component} from '@wordpress/element';\r\n\r\n//===> Phenix Background <===//\r\nexport default class PhenixBackground extends Component {\r\n    //===> Render <===//\r\n    render () {\r\n        //===> Properties <===//\r\n        const {\r\n            type,\r\n            value,\r\n            onChange\r\n        } = this.props;\r\n\r\n        //===> Colors List <===//\r\n        const pxPallete = {\r\n            main : [\r\n                \"bg-transparent\",\r\n                \"bg-primary\",\r\n                \"bg-secondary\",\r\n                \"bg-gray\",\r\n                \"bg-dark\",\r\n                \"bg-white\",\r\n                \"bg-success\",\r\n                \"bg-danger\",\r\n                \"bg-warning\",\r\n                \"bg-info\",\r\n                \"bg-alpha-05\",\r\n                \"bg-alpha-10\",\r\n                \"bg-alpha-25\",\r\n                \"bg-alpha-50\",\r\n                \"bg-alpha-75\",\r\n            ],\r\n            offwhite : [\r\n                \"bg-offwhite-primary\",\r\n                \"bg-offwhite-secondary\",\r\n                \"bg-offwhite-info\",\r\n                \"bg-offwhite-success\",\r\n                \"bg-ffwhite-danger\",\r\n                \"bg-offwhite-warning\",\r\n                \"bg-offwhite-smoke\",\r\n                \"bg-offwhite-smoke\",\r\n                \"bg-offwhite-gray\",\r\n                \"bg-offwhite-snow\",\r\n                \"bg-offwhite-snow\",\r\n                \"bg-offwhite-honeydew\",\r\n                \"bg-offwhite-mintcream\",\r\n                \"bg-offwhite-aliceblue\",\r\n                \"bg-offwhite-ghost\",\r\n                \"bg-offwhite-seashell\",\r\n                \"bg-offwhite-beige\",\r\n                \"bg-offwhite-oldlace\",\r\n                \"bg-offwhite-floral\",\r\n                \"bg-offwhite-ivory\",\r\n                \"bg-offwhite-antique\",\r\n                \"bg-offwhite-linen\",\r\n                \"bg-offwhite-lavenderblush\"\r\n            ],\r\n            brands : [\r\n                \"bg-facebook\",\r\n                \"bg-twitter\",\r\n                \"bg-youtube\",\r\n                \"bg-instagram\",\r\n                \"bg-snapchat\",\r\n                \"bg-whatsapp\",\r\n                \"bg-pinterest\",\r\n                \"bg-linkedin\",\r\n                \"bg-behance\",\r\n                \"bg-dribbble\",\r\n                \"bg-flicker\"\r\n            ],\r\n        }\r\n\r\n        //===> Returned Value <===//\r\n        const backgroundOptions = {}\r\n\r\n        //===> Type Activator <===//\r\n        const activeBtn = (current) => type === current ?  'primary' : 'light';\r\n        const activeTab = (current) => type === current ?  '' : 'hidden';\r\n\r\n        //===> Set Background <===//\r\n        const setBackground = clicked => {\r\n            //===> Get Value <===//\r\n            let button   = clicked.target,\r\n                bgType   = button.getAttribute('data-type'),\r\n                bgValue  = button.getAttribute('data-value');\r\n\r\n            //===> Set Background Type <===//\r\n            backgroundOptions.type  = bgType;\r\n\r\n            //===> Set Gradient <===//\r\n            if (type === 'gradient') {\r\n                backgroundOptions.value = bgValue;\r\n            } \r\n            //===> Set Color <===//\r\n            else {\r\n                backgroundOptions.value = bgValue;\r\n            }\r\n\r\n            //===> Return Options <===//\r\n            return onChange(backgroundOptions);\r\n        }\r\n\r\n        //===> Buttons Creator <===//\r\n        const makeButtons = (list, type) => {\r\n            let output = [];\r\n            //===> for each item <===//\r\n            for (let index = 0; index < list.length; index++) {\r\n                //===> Get Value <===//\r\n                const name = list[index];\r\n\r\n                //===> Convert to Title <===//\r\n                let title = list[index].replace('bg-', '');\r\n                    title = title.replace('-', ' ');\r\n                    title = title.replace('grade', '');\r\n\r\n                //===> UpperCase Title <===//\r\n                title = title.replace(/^\\w/, function(c) {\r\n                    return c.toUpperCase();\r\n                });\r\n\r\n                output.push(<button onClick={setBackground} title={title} data-value={name} data-type={type} className={`${name} btn square tiny radius-circle border-1 border-solid border-alpha-25 mb-10 me-10 ${value === name ? 'px-active' : null}`}></button>);\r\n            }\r\n\r\n            //===> Return Buttons <===//\r\n            return output;\r\n        }\r\n\r\n        //===> Options Changer <===//\r\n        const changeType = (clicked) => {\r\n            //===> Option Data <===//\r\n            let element = Phenix(clicked.target),\r\n                parent  = element.ancestor('.options-tabs'),\r\n                optionsList = Phenix(parent).next('.options-list'),\r\n                currentActive = Phenix(parent.querySelector('.primary')),\r\n                currentType = `${element[0].getAttribute('data-value')}-options`,\r\n                targetElement = optionsList.querySelector(`.${currentType}`);\r\n\r\n            //===> Change Active <===//\r\n            currentActive.addClass('light').removeClass('primary');\r\n            element.addClass('primary').removeClass('light');\r\n\r\n            //===> Show Options <===//\r\n            optionsList.querySelector('.flexbox:not(.hidden)')?.classList.add('hidden');\r\n            Phenix(targetElement).removeClass('hidden');\r\n        };\r\n\r\n        //===> Component Design <===//\r\n        return (\r\n            <div className='px-gb-component'>\r\n                {/*===> Background Types <===*/}\r\n                <div className='options-tabs px-group borderd-group radius-sm border-1 border-solid border-alpha-10 mb-20'>\r\n                    <button className={`btn tiny col ${activeBtn('color')}`} onClick={changeType} data-value=\"color\">Colors</button>\r\n                    <button className={`btn tiny col ${activeBtn('gradient')}`} onClick={changeType} data-value=\"gradient\">Gradients</button>\r\n                    <button className={`btn tiny col ${activeBtn('image')}`} onClick={changeType} data-value=\"image\">Image</button>\r\n                    <button className={`btn tiny bg-offwhite-smoke col far fa-ellipsis-v`} style={{padding:'0 8px'}}></button>\r\n                </div>\r\n\r\n                {/*===> Background <===*/}\r\n                <div className='options-list'>\r\n                    {/*===> Colors <====*/}\r\n                    <div className={`flexbox color-options ${activeTab('color')}`}>\r\n                        {makeButtons(pxPallete.main, 'color')}\r\n                        {/* Divider */}\r\n                        <span className='display-block border-alpha-05 bg-alpha-05 col-12 mb-15 mt-5 divider-t'></span>\r\n                        {/* Offwhite */}\r\n                        {makeButtons(pxPallete.offwhite, 'color')}\r\n                        {/* Divider */}\r\n                        <span className='display-block border-alpha-05 bg-alpha-05 col-12 mb-15 mt-5 divider-t'></span>\r\n                        {/* Brands */}\r\n                        {makeButtons(pxPallete.brands, 'color')}\r\n                    </div>\r\n                    {/*===> Gradients <====*/}\r\n                    <div className={`flexbox gradient-options ${activeTab('gradient')}`}>\r\n                        {makeButtons([\r\n                            \"bg-grade-primary\",\r\n                            \"bg-grade-secondary\",\r\n                            \"bg-grade-warning\",\r\n                            \"bg-grade-danger\",\r\n                            \"bg-grade-success\",\r\n                            \"bg-grade-water\",\r\n                            \"bg-grade-ice\",\r\n                            \"bg-grade-fire\",\r\n                            \"bg-grade-purple\"\r\n                        ], 'gradient')}\r\n                        {/* Divider */}\r\n                        <span className='display-block border-alpha-05 bg-alpha-05 col-12 mb-15 mt-5 divider-t'></span>\r\n                        {/* Directions */}\r\n                        <label className='mb-10 col-12'>Gradient Direction</label>\r\n                        <div className='px-group radius-sm border-1 border-solid border-alpha-10 borderd-group mb-10'>\r\n                            <button className='btn square tiny light' data-value=\"bg-grade-0\"><i className='inline-block fas fa-arrow-to-bottom'></i></button>\r\n                            <button className='btn square tiny light' data-value=\"bg-grade-45\"><i className='inline-block fas fa-arrow-to-bottom'style={{transform:'rotate(45deg)'}}></i></button>\r\n                            <button className='btn square tiny light' data-value=\"bg-grade-90\"><i className='inline-block fas fa-arrow-to-bottom'style={{transform:'rotate(90deg)'}}></i></button>\r\n                            <button className='btn square tiny light' data-value=\"bg-grade-90n\"><i className='inline-block fas fa-arrow-to-bottom'style={{transform:'rotate(-90deg)'}}></i></button>\r\n                            <button className='btn square tiny light' data-value=\"bg-grade-45n\"><i className='inline-block fas fa-arrow-to-bottom'style={{transform:'rotate(-45deg)'}}></i></button>\r\n                            <button className='btn square tiny light' data-value=\"bg-grade-180\"><i className='inline-block fas fa-arrow-to-bottom'style={{transform:'rotate(180deg)'}}></i></button>\r\n                        </div>\r\n                    </div>\r\n                    {/*===> Background <====*/}\r\n                    <div className={`flexbox image-options ${activeTab('image')}`}>\r\n                        ....\r\n                    </div>\r\n                </div>\r\n                {/*===> End Component <===*/}\r\n            </div>\r\n        )\r\n    }\r\n}","/*\r\n * ===> 01 - WordPress Modules\r\n * ===> 02 - Phenix Background\r\n * ===> 03 - Buttons Creator\r\n * ===> 04 - Component Output\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport {Component} from '@wordpress/element';\r\n\r\n//===> Phenix Background <===//\r\nexport default class PhenixColors extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {\r\n            value,\r\n            onChange\r\n        } = this.props;\r\n\r\n        //===> Colors List <===//\r\n        const pxPallete = {\r\n            main : [\r\n                \"color-inherit\",\r\n                \"color-primary\",\r\n                \"color-secondary\",\r\n                \"color-gray\",\r\n                \"color-dark\",\r\n                \"color-white\",\r\n                \"color-success\",\r\n                \"color-danger\",\r\n                \"color-warning\",\r\n                \"color-info\",\r\n                \"color-transparent\",\r\n            ],\r\n            brands : [\r\n                \"color-facebook\",\r\n                \"color-twitter\",\r\n                \"color-youtube\",\r\n                \"color-instagram\",\r\n                \"color-snapchat\",\r\n                \"color-whatsapp\",\r\n                \"color-pinterest\",\r\n                \"color-linkedin\",\r\n                \"color-behance\",\r\n                \"color-dribbble\",\r\n                \"color-flicker\"\r\n            ],\r\n        }\r\n\r\n        //===> Set Background <===//\r\n        const setColor = clicked => {\r\n            //===> Get Value <===//\r\n            let button = clicked.target,\r\n                value  = button.getAttribute('data-value');\r\n\r\n            //===> Return Options <===//\r\n            return onChange(value);\r\n        }\r\n\r\n        //===> Buttons Creator <===//\r\n        const makeButtons = (list) => {\r\n            let output = [];\r\n            //===> for each item <===//\r\n            for (let index = 0; index < list.length; index++) {\r\n                //===> Get Value <===//\r\n                const name = list[index];\r\n\r\n                //===> Convert to Title <===//\r\n                let title = list[index].replace('color-', '');\r\n                    title = title.replace('-', ' ');\r\n\r\n                //===> UpperCase Title <===//\r\n                title = title.replace(/^\\w/, function(c) {\r\n                    return c.toUpperCase();\r\n                });\r\n\r\n                output.push(<button onClick={setColor} title={title} data-value={name} className={`${name.replace('color-','bg-')} btn square tiny radius-circle border-1 border-solid border-alpha-25 mb-10 me-10 ${value === name ? 'px-active' : null}`}></button>);\r\n            }\r\n\r\n            //===> Return Buttons <===//\r\n            return output;\r\n        }\r\n\r\n        //===> Component Output <===//\r\n        return (\r\n            <div className='px-gb-component'>\r\n                {/*===> Label <===*/}\r\n                <label className='mb-10'>Select Color</label>\r\n                {/*===> Background <===*/}\r\n                <div className='flexbox'>\r\n                    {makeButtons(pxPallete.main)}\r\n                    {/* Divider */}\r\n                    <span className='border-alpha-05 bg-alpha-05 col-12 mb-15 mt-5 divider-t'></span>\r\n                    {/* Brands */}\r\n                    {makeButtons(pxPallete.brands)}\r\n                </div>\r\n                {/*===> End Component <===*/}\r\n            </div>\r\n        )\r\n    }\r\n}","//====> WP Modules <====//\r\nimport {\r\n    PanelBody,\r\n    SelectControl,\r\n    ToggleControl\r\n} from '@wordpress/components';\r\n\r\nimport {\r\n    InnerBlocks,\r\n    useBlockProps,\r\n    InspectorControls,\r\n    useInnerBlocksProps,\r\n} from '@wordpress/block-editor';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixBackground from '../px-components/px-background';\r\nimport PhenixColor from '../px-components/px-colors';\r\n\r\n//====> Edit Mode <====//\r\nexport default function Edit({ attributes, setAttributes }) {\r\n    //===> Settings <===//\r\n    const set_size = size => setAttributes({ size });\r\n    const set_tagName = tagName => setAttributes({ tagName });\r\n    const set_container = container => setAttributes({ container });\r\n    const set_container_flex = container_flex => setAttributes({ container_flex });\r\n\r\n    //===> Set Background <===//\r\n    const set_background = background => {\r\n        //===> Get Value <===//\r\n        let original  = attributes.className.replace('  ', ' '),\r\n            current   = attributes.px_bg;\r\n\r\n        //===> Remove Current Value <===//\r\n        if (attributes.px_bg) original = original.replace(current, '');\r\n\r\n        //===> Set New Value <===//\r\n        setAttributes({\r\n            px_bg : background.value,\r\n            px_bg_type : background.type,\r\n            className : `${original} ${background.value}`,\r\n        });\r\n    }\r\n\r\n    //===> Set Color <===//\r\n    const set_color = color => {\r\n        //===> Get Value <===//\r\n        let original = attributes.className.replace('  ', ' '),\r\n            current  = attributes.px_color;\r\n\r\n        //===> Remove Previous <===//\r\n        if (current) original = original.replace(current, '');\r\n\r\n        //===> Set Value <===//\r\n        setAttributes({\r\n            px_color  : color,\r\n            className : `${original} ${color}`,\r\n        });\r\n    }\r\n\r\n    //===> Get Block Properties <===//\r\n    const blockProps = useBlockProps();\r\n    const TagName = attributes.tagName;\r\n\r\n    //===> Container Options <===//\r\n    const container_options = {\r\n        size : attributes.size,\r\n        flexbox : attributes.container_flex ? 'flexbox' : '',\r\n    }\r\n\r\n    //===> Render <===//\r\n    return (<>\r\n        {/* //====> Controls Layout <====// */}\r\n        <InspectorControls key=\"inspector\">\r\n            {/*===> Widget Panel <===*/}\r\n            <PanelBody title=\"Section Settings\">\r\n                {/*=== Component <TagName> ===*/}\r\n                <SelectControl key=\"tagName\" label=\"HTML Tag\" value={attributes.tagName} onChange={set_tagName} options={[\r\n                    { label: 'Default <div>',  value: 'div' },\r\n                    { label: 'Main <main>',  value: 'main' },\r\n                    { label: 'Aside <aside>',  value: 'aside' },\r\n                    { label: 'Section <section>',  value: 'section' },\r\n                    { label: 'Header <header>', value: 'header' },\r\n                    { label: 'Footer <footer>', value: 'footer' },\r\n                ]}/>\r\n\r\n                {/*=== Container ===*/}\r\n                <ToggleControl label=\"With Container\" checked={attributes.container} onChange={set_container}/>\r\n            </PanelBody>\r\n            {/*=== Container Options ===*/}\r\n            {attributes.container ? <PanelBody title=\"Container Settings\">\r\n                {/*=== Container Size ===*/}\r\n                <SelectControl key=\"container_size\" label=\"Container Size\" value={attributes.size} onChange={set_size} options={[\r\n                    { label: 'Small',  value: 'container-sm' },\r\n                    { label: 'Medium', value: 'container-md' },\r\n                    { label: 'Normal', value: 'container' },\r\n                    { label: 'Large',  value: 'container-xl' },\r\n                    { label: 'Full Width',  value: 'container-fluid' },\r\n                ]}/>\r\n\r\n                {/*=== Container Size ===*/}\r\n                <ToggleControl label=\"Flex Container\" checked={attributes.container_flex} onChange={set_container_flex}/>\r\n            </PanelBody> : null}\r\n            {/*===> Widget Panel <===*/}\r\n            <PanelBody title=\"Background Settings\" initialOpen={false}>\r\n                <PhenixBackground onChange={set_background} type={attributes.px_bg_type} value={attributes.px_bg} />\r\n            </PanelBody>\r\n            {/*===> Widget Panel <===*/}\r\n            <PanelBody title=\"Text Color\" initialOpen={false}>\r\n                <PhenixColor onChange={set_color} />\r\n            </PanelBody>\r\n            {/*===> End Widgets Panels <===*/}\r\n        </InspectorControls>\r\n\r\n        {/* //====> Edit Layout <====// */}\r\n        <TagName { ...blockProps }>\r\n            {attributes.container ?\r\n                <div className={`${container_options.size} ${container_options.flexbox}`}>\r\n                    <InnerBlocks />\r\n                </div>\r\n            :\r\n                <InnerBlocks />\r\n            }\r\n        </TagName>\r\n    </>);\r\n}","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/*\r\n * ===> 01 - Block Data\r\n * ===> 02 - WordPress Modules\r\n * ===> 03 - Register Block\r\n * ===> 03 - Block Save Mode [Output]\r\n*/\r\n\r\n//===> Block Data <===//\r\nimport Edit from './edit';\r\nimport metadata from './block.json';\r\n\r\n//===> WordPress Modules <===//\r\nimport { registerBlockType } from '@wordpress/blocks';\r\n\r\nimport {\r\n    InnerBlocks,\r\n    useBlockProps,\r\n} from '@wordpress/block-editor';\r\n\r\n//===> Register Block <===//\r\nregisterBlockType(metadata, {\r\n    icon : <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 512\"><path d=\"M96 384h448V128H96V384zM32 96C14.34 96 0 110.3 0 128v256c0 17.66 14.34 32 32 32s32-14.34 32-32V128C64 110.3 49.66 96 32 96zM608 96c-17.66 0-32 14.34-32 32v256c0 17.66 14.34 32 32 32s32-14.34 32-32V128C640 110.3 625.7 96 608 96z\" /></svg>,\r\n\r\n    /**===> @see ./edit.js <===*/\r\n    edit : Edit,\r\n\r\n    /**===> Block Output <===*/\r\n    save : ({ attributes }) => {\r\n        //===> Get Block Properties <===//\r\n        const blockProps = useBlockProps.save();\r\n        const TagName = attributes.tagName;\r\n\r\n        //===> Container Options <===//\r\n        const container_options = {\r\n            size : attributes.size,\r\n            flexbox : attributes.container_flex ? 'flexbox' : '',\r\n        }\r\n\r\n        //===> Render <===//\r\n        return (\r\n            <TagName { ...blockProps }>\r\n                {attributes.container ? \r\n                    <div className={`${container_options.size} ${container_options.flexbox}`}>\r\n                        <InnerBlocks.Content />\r\n                    </div>\r\n                : \r\n                    <InnerBlocks.Content />\r\n                }\r\n            </TagName>\r\n        );\r\n    }\r\n});\r\n"],"names":["PhenixBackground","this","props","type","value","onChange","backgroundOptions","activeBtn","current","activeTab","setBackground","clicked","button","target","bgType","getAttribute","bgValue","makeButtons","list","output","index","length","name","title","replace","c","toUpperCase","push","onClick","className","changeType","element","Phenix","parent","ancestor","optionsList","next","currentActive","querySelector","currentType","targetElement","addClass","removeClass","classList","add","style","padding","transform","Component","PhenixColors","setColor","Edit","attributes","setAttributes","blockProps","useBlockProps","TagName","tagName","container_options","size","flexbox","container_flex","InspectorControls","key","PanelBody","SelectControl","label","options","ToggleControl","checked","container","initialOpen","background","original","px_bg","px_bg_type","color","px_color","InnerBlocks","module","exports","window","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","registerBlockType","metadata","icon","xmlns","viewBox","edit","save"],"sourceRoot":""}
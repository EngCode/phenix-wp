{"version":3,"file":"blocks/px-section/index.js","mappings":"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","sources":["webpack://phenix-ui/./src/blocks/px-components/px-background.js","webpack://phenix-ui/./src/blocks/px-components/px-colors.js","webpack://phenix-ui/./src/blocks/px-section/edit.js","webpack://phenix-ui/external window [\"wp\",\"blockEditor\"]","webpack://phenix-ui/external window [\"wp\",\"blocks\"]","webpack://phenix-ui/external window [\"wp\",\"components\"]","webpack://phenix-ui/external window [\"wp\",\"element\"]","webpack://phenix-ui/webpack/bootstrap","webpack://phenix-ui/webpack/runtime/compat get default export","webpack://phenix-ui/webpack/runtime/define property getters","webpack://phenix-ui/webpack/runtime/hasOwnProperty shorthand","webpack://phenix-ui/./src/blocks/px-section/index.js"],"sourcesContent":["/*\r\n * ===> 01 - WordPress Modules\r\n * ===> 02 - Phenix Background\r\n * ===> 03 - Buttons Creator\r\n * ===> 04 - Component Output\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport {Component} from '@wordpress/element';\r\n\r\n//===> Phenix Background <===//\r\nexport default class PhenixBackground extends Component {\r\n    //===> States <===//\r\n    state = {\r\n        main : [\r\n            \"bg-transparent\",\r\n            \"bg-primary\",\r\n            \"bg-secondary\",\r\n            \"bg-gray\",\r\n            \"bg-dark\",\r\n            \"bg-white\",\r\n            \"bg-success\",\r\n            \"bg-danger\",\r\n            \"bg-warning\",\r\n            \"bg-info\",\r\n            \"bg-alpha-05\",\r\n            \"bg-alpha-10\",\r\n            \"bg-alpha-25\",\r\n            \"bg-alpha-50\",\r\n            \"bg-alpha-75\",\r\n        ],\r\n        offwhite : [\r\n            \"bg-offwhite-primary\",\r\n            \"bg-offwhite-secondary\",\r\n            \"bg-offwhite-info\",\r\n            \"bg-offwhite-success\",\r\n            \"bg-ffwhite-danger\",\r\n            \"bg-offwhite-warning\",\r\n            \"bg-offwhite-smoke\",\r\n            \"bg-offwhite-smoke\",\r\n            \"bg-offwhite-gray\",\r\n            \"bg-offwhite-snow\",\r\n            \"bg-offwhite-snow\",\r\n            \"bg-offwhite-honeydew\",\r\n            \"bg-offwhite-mintcream\",\r\n            \"bg-offwhite-aliceblue\",\r\n            \"bg-offwhite-ghost\",\r\n            \"bg-offwhite-seashell\",\r\n            \"bg-offwhite-beige\",\r\n            \"bg-offwhite-oldlace\",\r\n            \"bg-offwhite-floral\",\r\n            \"bg-offwhite-ivory\",\r\n            \"bg-offwhite-antique\",\r\n            \"bg-offwhite-linen\",\r\n            \"bg-offwhite-lavenderblush\"\r\n        ],\r\n        brands : [\r\n            \"bg-facebook\",\r\n            \"bg-twitter\",\r\n            \"bg-youtube\",\r\n            \"bg-instagram\",\r\n            \"bg-snapchat\",\r\n            \"bg-whatsapp\",\r\n            \"bg-pinterest\",\r\n            \"bg-linkedin\",\r\n            \"bg-behance\",\r\n            \"bg-dribbble\",\r\n            \"bg-flicker\"\r\n        ],\r\n        rotation : [\r\n            'bg-grade-0',\r\n            'bg-grade-45',\r\n            'bg-grade-90',\r\n            'bg-grade-120',\r\n            'bg-grade-90n',\r\n            'bg-grade-120n',\r\n            'bg-grade-45n',\r\n            'bg-grade-180',\r\n        ]\r\n    }\r\n    //===> Render <===//\r\n    render () {\r\n        //===> Properties <===//\r\n        const {\r\n            type,\r\n            value,\r\n            onChange\r\n        } = this.props;\r\n\r\n        //===> Returned Value <===//\r\n        const options = {}\r\n\r\n        //===> Type Activator <===//\r\n        const activeBtn = (current) => type === current ?  'primary' : 'light';\r\n        const activeTab = (current) => type === current ?  '' : 'hidden';\r\n\r\n        //===> Set Background <===//\r\n        const setBackground = clicked => {\r\n            //===> Get Value <===//\r\n            let button   = clicked.target,\r\n                btnType   = button.getAttribute('data-type'),\r\n                btnValue  = button.getAttribute('data-value');\r\n\r\n            //===> Rotate Gradient <===//\r\n            if (btnType === 'rotate') {\r\n                //===> Clear Exisitng Directions <===//\r\n                let current = options.value,\r\n                    saved   = value.replaceAll('   ', '');\r\n\r\n                //===> Clear Exisitng Directions <===//\r\n                this.state.rotation.forEach(name => {\r\n                    if (name !== btnValue) {\r\n                        saved = saved.replaceAll(name, '').replaceAll(' n','');\r\n                        if (current) options.value = current.replaceAll(name, '').replaceAll(' n','');\r\n                    };\r\n                });\r\n\r\n                //===> Set New Direction <===//\r\n                options.type  = 'gradient';\r\n                options.value = `${saved} ${btnValue}`;\r\n            }\r\n            //===> Set Background <===//\r\n            else {\r\n                options.type  = btnType;\r\n                options.value = btnValue;\r\n            }\r\n\r\n            //===> Return Options <===//\r\n            return onChange(options);\r\n        }\r\n\r\n        //===> Buttons Creator <===//\r\n        const makeButtons = (list, type) => {\r\n            let output = [];\r\n            //===> for each item <===//\r\n            for (let index = 0; index < list.length; index++) {\r\n                //===> Get Value <===//\r\n                const name = list[index];\r\n\r\n                //===> Convert to Title <===//\r\n                let title = list[index].replace('bg-', '');\r\n                    title = title.replace('-', ' ');\r\n                    title = title.replace('grade', '');\r\n\r\n                //===> UpperCase Title <===//\r\n                title = title.replace(/^\\w/, function(c) {\r\n                    return c.toUpperCase();\r\n                });\r\n\r\n                output.push(<button onClick={setBackground} title={title} data-value={name} data-type={type} className={`${name} btn square tiny radius-circle border-1 border-solid border-alpha-25 mb-10 me-10 ${value.includes(name) ? 'px-active' : ''}`}></button>);\r\n            }\r\n\r\n            //===> Return Buttons <===//\r\n            return output;\r\n        }\r\n\r\n        //===> Icons Buttons <===//\r\n        const makeRotations = (list, type) => {\r\n            let output = [];\r\n            //===> for each item <===//\r\n            for (let index = 0; index < list.length; index++) {\r\n                //===> Get Value <===//\r\n                const name = list[index];\r\n\r\n                //===> Rotation <===//\r\n                let rotation = name.replace('bg-grade-', '');\r\n                if (name.endsWith('n')) rotation = `-${rotation.slice(0,-1)}`;\r\n\r\n                //===> Get Value <===//\r\n                output.push(<button data-type={type} onClick={setBackground} data-value={name} className={`btn square tiny light ${value.includes(name) ? 'px-active' : ''}`}><i className='inline-block fas fa-arrow-to-bottom' style={{transform:`rotate(${rotation}deg)`}}></i></button>);\r\n            }\r\n\r\n            //===> Return Buttons <===//\r\n            return output\r\n        }\r\n\r\n        //===> Options Changer <===//\r\n        const changeType = (clicked) => {\r\n            //===> Option Data <===//\r\n            let element = Phenix(clicked.target),\r\n                parent  = element.ancestor('.options-tabs'),\r\n                optionsList = Phenix(parent).next('.options-list'),\r\n                currentActive = Phenix(parent.querySelector('.primary')),\r\n                currentType = `${element[0].getAttribute('data-value')}-options`,\r\n                targetElement = optionsList.querySelector(`.${currentType}`);\r\n\r\n            //===> Change Active <===//\r\n            currentActive.addClass('light').removeClass('primary');\r\n            element.addClass('primary').removeClass('light');\r\n\r\n            //===> Show Options <===//\r\n            optionsList.querySelector('.flexbox:not(.hidden)')?.classList.add('hidden');\r\n            Phenix(targetElement).removeClass('hidden');\r\n        };\r\n\r\n        //===> Component Design <===//\r\n        return (\r\n            <div className='px-gb-component'>\r\n                {/*===> Background Types <===*/}\r\n                <div className='options-tabs px-group borderd-group radius-sm border-1 border-solid border-alpha-10 mb-20'>\r\n                    <button className={`btn tiny col ${activeBtn('color')}`} onClick={changeType} data-value=\"color\">Colors</button>\r\n                    <button className={`btn tiny col ${activeBtn('gradient')}`} onClick={changeType} data-value=\"gradient\">Gradients</button>\r\n                    <button className={`btn tiny col ${activeBtn('image')}`} onClick={changeType} data-value=\"image\">Image</button>\r\n                    <button className={`btn tiny bg-offwhite-smoke col far fa-ellipsis-v`} style={{padding:'0 8px'}}></button>\r\n                </div>\r\n\r\n                {/*===> Background <===*/}\r\n                <div className='options-list'>\r\n                    {/*===> Colors <====*/}\r\n                    <div className={`flexbox color-options ${activeTab('color')}`}>\r\n                        {makeButtons(this.state.main, 'color')}\r\n                        {/* Divider */}\r\n                        <span className='display-block border-alpha-05 bg-alpha-05 col-12 mb-15 mt-5 divider-t'></span>\r\n                        {/* Offwhite */}\r\n                        {makeButtons(this.state.offwhite, 'color')}\r\n                        {/* Divider */}\r\n                        <span className='display-block border-alpha-05 bg-alpha-05 col-12 mb-15 mt-5 divider-t'></span>\r\n                        {/* Brands */}\r\n                        {makeButtons(this.state.brands, 'color')}\r\n                    </div>\r\n                    {/*===> Gradients <====*/}\r\n                    <div className={`flexbox gradient-options ${activeTab('gradient')}`}>\r\n                        {makeButtons([\r\n                            \"bg-grade-primary\",\r\n                            \"bg-grade-secondary\",\r\n                            \"bg-grade-warning\",\r\n                            \"bg-grade-danger\",\r\n                            \"bg-grade-success\",\r\n                            \"bg-grade-water\",\r\n                            \"bg-grade-ice\",\r\n                            \"bg-grade-fire\",\r\n                            \"bg-grade-purple\"\r\n                        ], 'gradient')}\r\n                        {/* Divider */}\r\n                        <span className='display-block border-alpha-05 bg-alpha-05 col-12 mb-15 mt-5 divider-t'></span>\r\n                        {/* Directions */}\r\n                        <label className='mb-10 col-12'>Gradient Direction</label>\r\n                        {/* .... */}\r\n                        <div className='px-group icon-btns radius-sm border-1 border-solid border-alpha-10 borderd-group mb-10'>\r\n                            {makeRotations(this.state.rotation, 'rotate')}\r\n                        </div>\r\n                    </div>\r\n                    {/*===> Background <====*/}\r\n                    <div className={`flexbox image-options ${activeTab('image')}`}>\r\n                        ....\r\n                    </div>\r\n                </div>\r\n                {/*===> End Component <===*/}\r\n            </div>\r\n        )\r\n    }\r\n}","/*\r\n * ===> 01 - WordPress Modules\r\n * ===> 02 - Phenix Background\r\n * ===> 03 - Buttons Creator\r\n * ===> 04 - Component Output\r\n*/\r\n\r\n//===> WordPress Modules <===//\r\nimport {Component} from '@wordpress/element';\r\n\r\n//===> Phenix Background <===//\r\nexport default class PhenixColors extends Component {\r\n    render () {\r\n        //===> Properties <===//\r\n        const {\r\n            value,\r\n            onChange\r\n        } = this.props;\r\n\r\n        //===> Colors List <===//\r\n        const pxPallete = {\r\n            main : [\r\n                \"color-inherit\",\r\n                \"color-primary\",\r\n                \"color-secondary\",\r\n                \"color-gray\",\r\n                \"color-dark\",\r\n                \"color-white\",\r\n                \"color-success\",\r\n                \"color-danger\",\r\n                \"color-warning\",\r\n                \"color-info\",\r\n                \"color-transparent\",\r\n            ],\r\n            brands : [\r\n                \"color-facebook\",\r\n                \"color-twitter\",\r\n                \"color-youtube\",\r\n                \"color-instagram\",\r\n                \"color-snapchat\",\r\n                \"color-whatsapp\",\r\n                \"color-pinterest\",\r\n                \"color-linkedin\",\r\n                \"color-behance\",\r\n                \"color-dribbble\",\r\n                \"color-flicker\"\r\n            ],\r\n        }\r\n\r\n        //===> Set Background <===//\r\n        const setColor = clicked => {\r\n            //===> Get Value <===//\r\n            let button = clicked.target,\r\n                value  = button.getAttribute('data-value');\r\n\r\n            //===> Return Options <===//\r\n            return onChange(value);\r\n        }\r\n\r\n        //===> Buttons Creator <===//\r\n        const makeButtons = (list) => {\r\n            let output = [];\r\n            //===> for each item <===//\r\n            for (let index = 0; index < list.length; index++) {\r\n                //===> Get Value <===//\r\n                const name = list[index];\r\n\r\n                //===> Convert to Title <===//\r\n                let title = list[index].replace('color-', '');\r\n                    title = title.replace('-', ' ');\r\n\r\n                //===> UpperCase Title <===//\r\n                title = title.replace(/^\\w/, function(c) {\r\n                    return c.toUpperCase();\r\n                });\r\n\r\n                output.push(<button onClick={setColor} title={title} data-value={name} className={`${name.replace('color-','bg-')} btn square tiny radius-circle border-1 border-solid border-alpha-25 mb-10 me-10 ${value === name ? 'px-active' : null}`}></button>);\r\n            }\r\n\r\n            //===> Return Buttons <===//\r\n            return output;\r\n        }\r\n\r\n        //===> Component Output <===//\r\n        return (\r\n            <div className='px-gb-component'>\r\n                {/*===> Label <===*/}\r\n                <label className='mb-10'>Select Color</label>\r\n                {/*===> Background <===*/}\r\n                <div className='flexbox options-list'>\r\n                    {makeButtons(pxPallete.main)}\r\n                    {/* Divider */}\r\n                    <span className='border-alpha-05 bg-alpha-05 col-12 mb-15 mt-5 divider-t'></span>\r\n                    {/* Brands */}\r\n                    {makeButtons(pxPallete.brands)}\r\n                </div>\r\n                {/*===> End Component <===*/}\r\n            </div>\r\n        )\r\n    }\r\n}","//====> WP Modules <====//\r\nimport {\r\n    PanelBody,\r\n    SelectControl,\r\n    ToggleControl\r\n} from '@wordpress/components';\r\n\r\nimport {\r\n    InnerBlocks,\r\n    useBlockProps,\r\n    InspectorControls,\r\n    useInnerBlocksProps,\r\n} from '@wordpress/block-editor';\r\n\r\n//====> Phenix Modules <====//\r\nimport PhenixBackground from '../px-components/px-background';\r\nimport PhenixColor from '../px-components/px-colors';\r\n\r\n//====> Edit Mode <====//\r\nexport default function Edit({ attributes, setAttributes }) {\r\n    //===> Set Settings <===//\r\n    const set_size = size => setAttributes({ size });\r\n    const set_tagName = tagName => setAttributes({ tagName });\r\n    const set_container = container => setAttributes({ container });\r\n    const set_container_flex = container_flex => setAttributes({ container_flex });\r\n\r\n    //===> Set Background <===//\r\n    const set_background = background => {\r\n        //===> Get Value <===//\r\n        let current  = attributes.px_bg,\r\n            original = attributes.className.replace('  ', ' ');\r\n\r\n        //===> Remove Current Value <===//\r\n        if (attributes.px_bg) original = original.replace(current, '');\r\n\r\n        //===> Set New Value <===//\r\n        if (background.value) {\r\n            setAttributes({\r\n                px_bg : background.value,\r\n                px_bg_type : background.type,\r\n                className : `${original} ${background.value}`,\r\n            });\r\n        }\r\n    }\r\n\r\n    //===> Set Color <===//\r\n    const set_color = color => {\r\n        //===> Get Value <===//\r\n        let current  = attributes.px_color,\r\n            original = attributes.className.replace('  ', ' ');\r\n\r\n        //===> Remove Current Value <===//\r\n        if (current) original = original.replace(current, '');\r\n\r\n        //===> Set New Value <===//\r\n        setAttributes({\r\n            px_color  : color,\r\n            className : `${original} ${color}`,\r\n        });\r\n    }\r\n\r\n    //===> Get Block Properties <===//\r\n    const blockProps = useBlockProps();\r\n    const TagName = attributes.tagName;\r\n\r\n    //===> Container Options <===//\r\n    const container_options = {\r\n        size : attributes.size,\r\n        flexbox : attributes.container_flex ? 'flexbox' : '',\r\n    }\r\n\r\n    //===> Render <===//\r\n    return (<>\r\n        {/* //====> Controls Layout <====// */}\r\n        <InspectorControls key=\"inspector\">\r\n            {/*===> Widget Panel <===*/}\r\n            <PanelBody title=\"Section Settings\">\r\n                {/*=== Component <TagName> ===*/}\r\n                <SelectControl key=\"tagName\" label=\"HTML Tag\" value={attributes.tagName} onChange={set_tagName} options={[\r\n                    { label: 'Default <div>',  value: 'div' },\r\n                    { label: 'Main <main>',  value: 'main' },\r\n                    { label: 'Aside <aside>',  value: 'aside' },\r\n                    { label: 'Section <section>',  value: 'section' },\r\n                    { label: 'Header <header>', value: 'header' },\r\n                    { label: 'Footer <footer>', value: 'footer' },\r\n                ]}/>\r\n\r\n                {/*=== Container ===*/}\r\n                <ToggleControl label=\"With Container\" checked={attributes.container} onChange={set_container}/>\r\n            </PanelBody>\r\n            {/*=== Container Options ===*/}\r\n            {attributes.container ? <PanelBody title=\"Container\" initialOpen={false}>\r\n                {/*=== Container Size ===*/}\r\n                <SelectControl key=\"container_size\" label=\"Container Size\" value={attributes.size} onChange={set_size} options={[\r\n                    { label: 'Small',  value: 'container-sm' },\r\n                    { label: 'Medium', value: 'container-md' },\r\n                    { label: 'Normal', value: 'container' },\r\n                    { label: 'Large',  value: 'container-xl' },\r\n                    { label: 'Full Width',  value: 'container-fluid' },\r\n                ]}/>\r\n\r\n                {/*=== Container Size ===*/}\r\n                <ToggleControl label=\"Flex Container\" checked={attributes.container_flex} onChange={set_container_flex}/>\r\n            </PanelBody> : null}\r\n            {/*===> Widget Panel <===*/}\r\n            <PanelBody title=\"Typography\" initialOpen={false}>\r\n                <PhenixColor onChange={set_color} value={attributes.px_color} />\r\n            </PanelBody>\r\n            {/*===> Widget Panel <===*/}\r\n            <PanelBody title=\"Background\" initialOpen={false}>\r\n                <PhenixBackground onChange={set_background} type={attributes.px_bg_type} value={attributes.px_bg} />\r\n            </PanelBody>\r\n            {/*===> End Widgets Panels <===*/}\r\n        </InspectorControls>\r\n\r\n        {/* //====> Edit Layout <====// */}\r\n        <TagName { ...blockProps }>\r\n            {attributes.container ?\r\n                <div className={`${container_options.size} ${container_options.flexbox}`}>\r\n                    <InnerBlocks />\r\n                </div>\r\n            :\r\n                <InnerBlocks />\r\n            }\r\n        </TagName>\r\n    </>);\r\n}","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/*\r\n * ===> 01 - Block Data\r\n * ===> 02 - WordPress Modules\r\n * ===> 03 - Register Block\r\n * ===> 03 - Block Save Mode [Output]\r\n*/\r\n\r\n//===> Block Data <===//\r\nimport Edit from './edit';\r\nimport metadata from './block.json';\r\n\r\n//===> WordPress Modules <===//\r\nimport { registerBlockType } from '@wordpress/blocks';\r\n\r\nimport {\r\n    InnerBlocks,\r\n    useBlockProps,\r\n} from '@wordpress/block-editor';\r\n\r\n//===> Register Block <===//\r\nregisterBlockType(metadata, {\r\n    icon : <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 512\"><path d=\"M96 384h448V128H96V384zM32 96C14.34 96 0 110.3 0 128v256c0 17.66 14.34 32 32 32s32-14.34 32-32V128C64 110.3 49.66 96 32 96zM608 96c-17.66 0-32 14.34-32 32v256c0 17.66 14.34 32 32 32s32-14.34 32-32V128C640 110.3 625.7 96 608 96z\" /></svg>,\r\n\r\n    /**===> @see ./edit.js <===*/\r\n    edit : Edit,\r\n\r\n    /**===> Block Output <===*/\r\n    save : ({ attributes }) => {\r\n        //===> Get Block Properties <===//\r\n        const blockProps = useBlockProps.save();\r\n        const TagName = attributes.tagName;\r\n\r\n        //===> Container Options <===//\r\n        const container_options = {\r\n            size : attributes.size,\r\n            flexbox : attributes.container_flex ? 'flexbox' : '',\r\n        }\r\n\r\n        //===> Render <===//\r\n        return (\r\n            <TagName { ...blockProps }>\r\n                {attributes.container ? \r\n                    <div className={`${container_options.size} ${container_options.flexbox}`}>\r\n                        <InnerBlocks.Content />\r\n                    </div>\r\n                : \r\n                    <InnerBlocks.Content />\r\n                }\r\n            </TagName>\r\n        );\r\n    }\r\n});\r\n"],"names":["PhenixBackground","main","offwhite","brands","rotation","this","props","type","value","onChange","options","activeBtn","current","activeTab","setBackground","clicked","button","target","btnType","getAttribute","btnValue","saved","replaceAll","state","forEach","name","makeButtons","list","output","index","length","title","replace","c","toUpperCase","push","onClick","className","includes","changeType","element","Phenix","parent","ancestor","optionsList","next","currentActive","querySelector","currentType","targetElement","addClass","removeClass","classList","add","style","padding","endsWith","slice","transform","makeRotations","Component","PhenixColors","setColor","Edit","attributes","setAttributes","blockProps","useBlockProps","TagName","tagName","container_options","size","flexbox","container_flex","InspectorControls","key","PanelBody","SelectControl","label","ToggleControl","checked","container","initialOpen","color","px_color","original","background","px_bg","px_bg_type","InnerBlocks","module","exports","window","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","registerBlockType","metadata","icon","xmlns","viewBox","edit","save"],"sourceRoot":""}